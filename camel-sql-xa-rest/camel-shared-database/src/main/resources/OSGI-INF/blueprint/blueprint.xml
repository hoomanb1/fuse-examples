<?xml version="1.0" encoding="UTF-8"?>
<blueprint xmlns="http://www.osgi.org/xmlns/blueprint/v1.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:camel="http://camel.apache.org/schema/blueprint"
	xsi:schemaLocation="
       http://www.osgi.org/xmlns/blueprint/v1.0.0 http://www.osgi.org/xmlns/blueprint/v1.0.0/blueprint.xsd
       http://camel.apache.org/schema/blueprint http://camel.apache.org/schema/blueprint/camel-blueprint.xsd">

	<reference id="dataSource" interface="javax.sql.DataSource"
		filter="(osgi.jndi.service.name=local_mysql)" />

	<bean id="sql" class="org.apache.camel.component.sql.SqlComponent">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- ACTIVEMQ configuration -->

	<bean id="activemq" class="org.apache.camel.component.jms.JmsComponent">
		<property name="configuration" ref="activemqJmsConfig" />
	</bean>

	<bean id="activemqJmsConfig" class="org.apache.camel.component.jms.JmsConfiguration">
		<property name="connectionFactory" ref="activemqpooled" />
		<property name="transactionManager" ref="platformTxManager" />
		<property name="transacted" value="false" />
		<property name="cacheLevelName" value="CACHE_NONE" />
		<property name="concurrentConsumers" value="1" />
		<property name="maxConcurrentConsumers" value="1" />
	</bean>

	<bean id="activemqpooled" class="org.apache.activemq.pool.JcaPooledConnectionFactory"
		init-method="start" destroy-method="stop">
		<property name="idleTimeout" value="0" />
		<property name="name" value="activemq.default" />
		<property name="maxConnections" value="1" />
		<property name="connectionFactory" ref="activemq-jms-xa-connection-factory" />
		<property name="transactionManager" ref="transactionManager" />
	</bean>

	<bean id="activemq-jms-xa-connection-factory" class="org.apache.activemq.ActiveMQXAConnectionFactory">
		<property name="brokerURL" value="tcp://localhost:61616" />
		<property name="userName" value="admin" />
		<property name="password" value="admin" />
	</bean>

	<reference id="platformTxManager" interface="org.springframework.transaction.PlatformTransactionManager"
		availability="mandatory" />

	<reference id="transactionManager" interface="javax.transaction.TransactionManager" />

	<!-- END -->

	<camelContext id="blueprintContext" trace="true"
		xmlns="http://camel.apache.org/schema/blueprint">
		<route id="processEvent-route">
			<from uri="activemq:billing.records" />
			<to uri="sql:select * from BILLING_EVENT where UUID=:#uuid" />
			<camel:choice>
				<camel:when>
					<camel:simple>${header.CamelSqlRowCount} == 0</camel:simple>
					<camel:log message="No matching billing found ... " />
					<camel:setHeader headerName="eventComplete">
						<camel:simple>0</camel:simple>
					</camel:setHeader>
					<camel:setHeader headerName="eventStatus">
						<camel:simple>NOT PROCESSED YET</camel:simple>
					</camel:setHeader>
					<to uri="sql:insert into BILLING_EVENT_STATUS (event_complete, event_status) values (:#eventComplete, :#eventStatus)" />
				</camel:when>
				<camel:otherwise>
					<camel:log message="Matching billing found ..." />
					<camel:setHeader headerName="eventComplete">
						<camel:simple>1</camel:simple>
					</camel:setHeader>
					<camel:setHeader headerName="eventStatus">
						<camel:simple>PROCESSING</camel:simple>
					</camel:setHeader>
					<to uri="sql:insert into BILLING_EVENT_STATUS (event_complete, event_status) values (:#eventComplete, :#eventStatus)" />
				</camel:otherwise>
			</camel:choice>
			<log message="${body}" />
		</route>
	</camelContext>

</blueprint>
